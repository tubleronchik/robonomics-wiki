{"hash":"6d87440d8893beaa00284a9efb5227d98041b9ae","data":{"doc":{"id":"6a11a27105dde58e7fd273f22ad48734","title":"Robonomics parachain in practice","headings":[{"value":"Robonomics parachain in practice"}],"subtitles":[{"depth":1,"value":"Robonomics parachain in practice","anchor":"#robonomics-parachain-in-practice"},{"depth":2,"value":"Launch the relay","anchor":"#launch-the-relay"}],"content":"import Asciinema from '~/components/Asciinema.vue'\n\n# Robonomics parachain in practice\n\nRobonomics parachain is not a general purpose parachain on Polkadot ecosystem. The target of Robonomics\nis building economy of machines, the parachain in this scope of aims helps to integrate Polkadot ecosystem\nwith IoT, Smart Cities and Industry 4.0 concepts.\n\nThis lesson requirements:\n* Docker, please [install it](https://docs.docker.com/engine/install/).\n* Polkadot-launch, please [install it](https://github.com/paritytech/polkadot-launch#install).\n\n## Launch the relay\n\nThe relay chain is a core of Polkadot, it provides [shared security](https://wiki.polkadot.network/docs/en/learn-security)\nfor all child parachains and implements message passing mechanics for them. Let's launch local instance of Rococo (polkadot testnet)\nrelay chain with two robonomics-based parachains as a childs. I'll use prepared [Docker image]() but all source code of examples\navailable in [Robonomics GitHub](https://github.com/airalab/robonomics/tree/master/scripts/polkadot-launch).\n\n<Asciinema vid=\"Tsfnt8th1bce8Bx7LYItDaDkP\"/>\n\nIt could take a time, but be partient. As result you should have three chain instances at ports:\n\n* `9944` - local rococo relay chain.\n* `9988` - robonomics parachain with `id=100`\n* `9989` - robonomics parachain with `id=200`\n\n![relay](https://ipfs.io/ipfs/QmR9Tj86yPkrXQsSwereJwqDxsZgkAdySB16G4SMHrhpBu/upcoming.png)\n\nSome time ago parachains should be registered.\n\n![relay2](https://ipfs.io/ipfs/QmR9Tj86yPkrXQsSwereJwqDxsZgkAdySB16G4SMHrhpBu/parachains.png)\n\nAnd start to produce blocks.\n\n![relay3](https://ipfs.io/ipfs/QmR9Tj86yPkrXQsSwereJwqDxsZgkAdySB16G4SMHrhpBu/parachains2.png)\n\nAs next step let's create HRMP channel to pass messages between parachains. I'll use `sudo` module call on relay chain page.\n\n![hrmp](https://ipfs.io/ipfs/QmR9Tj86yPkrXQsSwereJwqDxsZgkAdySB16G4SMHrhpBu/hrmp.png)\n\nWhen channel created, the XCM calls is available. Let's use `datalogXcm` pallet - a XCM version of `datalog` pallet.\n\n![datalogXcmSend](https://ipfs.io/ipfs/QmR9Tj86yPkrXQsSwereJwqDxsZgkAdySB16G4SMHrhpBu/datalogXcmSend.png)\n\nAs result message on second parachain will call `datalog` pallet and write data on chain.\n\n![datalogXcmRecv](https://ipfs.io/ipfs/QmR9Tj86yPkrXQsSwereJwqDxsZgkAdySB16G4SMHrhpBu/datalogXcmRecv.png)\n\nAs result, this example demonstrate how XCM could be used for cross chain usage of standard robonomics pallets."}},"context":{}}