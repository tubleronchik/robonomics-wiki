{"hash":"2c77f8c762c9bad039b26126e58458e16a426c4f","data":{"doc":{"id":"accf2ce5f73f81bf63e784a00c9dbb89","title":"Lesson 4, Robonomics Parachain in Practice","contributors":["akru"],"translated":true,"headings":[],"subtitles":[{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Launch the relay","anchor":"#launch-the-relay"}],"content":"import Asciinema from '~/components/Asciinema.vue'\n\nAt the moment, Robonomics, in addition to the Ethereum network, also operates on the basis of the Polkadot ecosystem, which has greater scalability through the use of sharded blockchains. To do this, the ecosystem uses a [sharded model](https://wiki.polkadot.network/docs/getting-started), with the following elements:\n\n![Polkadot base scheme](../images/ws_lesson4/polkadot-base-scheme.png \"Polkadot base scheme (from Polkadot Wiki)\")\n\n* relay chain — central blockchain used by others for basic coordination of work;\n* parachains — data structures (usually also blockchains) used for specific applications; Robonomics operates as a parachain;\n* validators — nodes that create blocks in the relay chain and also verify new block candidates from parachains for inclusion to the shared state of Polkadot;\n* collators — nodes that maintain a parachain by collecting its transactions and producing new block candidates to pass to validators;\n* Cross-Consensus Messaging Format (XCM) — format that allows parachains to send messages of any type to each other.\n\nThe goal of this lesson is to get to know the basic elements of the Polkadot ecosystem and understand how they interact with each other. To do this, you will run your local relay chain and several Robonomics-based parachains.\n\n## Requirements\n\n* Docker, please [install it](https://docs.docker.com/engine/install/).\n* Polkadot-launch, please [install it](https://github.com/paritytech/polkadot-launch#install) (optionally, if you don't want to use docker).\n\n## Launch the relay\n\nLet's launch local instance of Rococo (polkadot testnet) relay chain with two Robonomics-based parachains as a childs. I'll use prepared [Docker image tag: \"winter-school-2\"](https://hub.docker.com/layers/robonomics/robonomics/winter-school-2/images/sha256-92f4795262f3ded3e6a153999d2777c4009106a7d37fd29969ebf1c3a262dc85?context=explore) but all source code of examples\navailable in [Robonomics GitHub](https://github.com/airalab/robonomics/tree/master/scripts/polkadot-launch).\n```\ndocker run -ti --rm --network host robonomics/robonomics:winter-school-2 bash\ncd polkadot-launch/\n./launch.sh\n```\n\n<Asciinema vid=\"419Jrg22ziFfMFPZlh2WtiLvg\"/>\n\nIt could take a time, but be partient. As result you should have three chain instances at ports:\n\n* `9944` - local rococo relay chain.\n* `9988` - robonomics parachain with `id=100`\n* `9989` - robonomics parachain with `id=200`\n\nIf you use remote server, you need to create some ssh tunnels on local machine:\n```\nssh -f -N -L 9944:127.0.0.1:9944 root@REMOTE_SERVER_IP\nssh -f -N -L 9988:127.0.0.1:9988 root@REMOTE_SERVER_IP\nssh -f -N -L 9989:127.0.0.1:9989 root@REMOTE_SERVER_IP\n```\nAfter that, you can use `ws://127.0.0.1:9944` for relay chain, `ws://127.0.0.1:9988`and `ws://127.0.0.1:9989` for parachains in https://parachain.robonomics.network/\n\n![relay](../images/ws_lesson4/upcoming.jpg)\n\nSome time ago parachains should be registered.\n\n![relay2](../images/ws_lesson4/parachains.jpg)\n\nAnd start to produce blocks.\n\n![relay3](../images/ws_lesson4/parachains2.jpg)\n\nAs next step let's create HRMP channel to pass messages between parachains. I'll use `sudo` module call on relay chain page.\n\n![hrmp](../images/ws_lesson4/hrmp.jpg)\n\nWhen channel created, the XCM calls is available. Let's use `datalogXcm` pallet - a XCM version of `datalog` pallet in first parachain.\n\n![datalogXcmSend](../images/ws_lesson4/datalogXcmSend.jpg)\n\nAs result message on second parachain will call `datalog` pallet and write data on chain.\n\n![datalogXcmRecv](../images/ws_lesson4/datalogXcmRecv.jpg)\n\nAs result, this example demonstrate how XCM could be used for cross chain usage of standard robonomics pallets.\n"}},"context":{}}