{"hash":"a4b0cfd1c4076793abe12df6c2532e867f7509c2","data":{"doc":{"id":"1fc1dc2dbf767f7998053575aa8cf958","title":"Install Sensors Connectivity","contributors":["LoSk-p","Vourhey","tubleronchik"],"translated":true,"headings":[{"value":"Installation as PyPi package"},{"value":"Build from source"}],"subtitles":[{"depth":2,"value":"Pre-requirements","anchor":"#pre-requirements"},{"depth":1,"value":"Installation as PyPi package","anchor":"#installation-as-pypi-package"},{"depth":2,"value":"Configuration","anchor":"#configuration"},{"depth":2,"value":"Running","anchor":"#running"},{"depth":1,"value":"Build from source","anchor":"#build-from-source"},{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Get a Package And Installing dependencies","anchor":"#get-a-package-and-installing-dependencies"},{"depth":2,"value":"Documentation","anchor":"#documentation"},{"depth":2,"value":"Configuration","anchor":"#configuration-1"},{"depth":2,"value":"Running","anchor":"#running-1"},{"depth":2,"value":"Example of logs:","anchor":"#example-of-logs"},{"depth":2,"value":"Troubleshooting","anchor":"#troubleshooting"},{"depth":3,"value":"Python.h: No such file or directory","anchor":"#pythonh-no-such-file-or-directory"},{"depth":3,"value":"Python versions mismatch","anchor":"#python-versions-mismatch"}],"content":"\n## Pre-requirements\n\nTo build a python package IPFS daemon should be installed. Assyming, you work with linux:\n\n```\nwget https://dist.ipfs.io/go-ipfs/v0.8.0/go-ipfs_v0.8.0_linux-amd64.tar.gz\ntar -xzf go-ipfs_v0.8.0_linux-amd64.tar.gz\ncd go-ipfs\nsudo bash install.sh \nipfs init\n```\n\n# Installation as PyPi package\n\n```\npip3 install py-sr25519-bindings\npip3 install sensors-connectivity\n```\n\n## Configuration\n\n[Here](/docs/configuration-options-description/) you can find an article to set a proper configuration for your instance.\n\n## Running\n\nFirst, launch IPFS daemon:\n\n```\nipfs daemon --enable-pubsub-experiment\n```\nAfter config and log files are setted, you can run the service: (in another terminal)\n\n```\nsensors_connectivity \"path/to/your/config/file\"\n```\n\nYou will be able to see logs in your console and in `~/.logs`.\n\n# Build from source\n## Requirements\n\nTo build a python package fron source [poetry](https://python-poetry.org/docs/#osx--linux--bashonwindows-install-instructions) should be also installed. Assyming, you work with linux:\n\n```\ncurl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -\n```\n\n## Get a Package And Installing dependencies\n\n```\ngit clone https://github.com/airalab/sensors-connectivity\ncd sensors-connectivity\npoetry install\n```\n\n## Documentation\n\nTo prepare a sensor for the work with the package follow instructions on [Robonomics Wiki](/docs/connect-sensor-to-robonomics/).\n\n## Configuration\n\n[Here](/docs/configuration-options-description/) you can find an article to set a proper configuration for your instance.\n\nMake a copy of `default.json` and fill it using description from the article.\n\nYou also can set a logging file. The default file for logs is `logging.py`, which uses `console` and `file` handler by default. Pay attention for the `file` handler. The template is stored in `connectivity/config/logging_template.py`. You can cpecify the path (`filename`), where your logs will be stored in (do not forget to create this directory if it doesn't exist). Default path for logs is `~/.logs`. You can figure any other handlers from the [library](https://docs.python.org/3.8/library/logging.html).\n\n## Running\n\nFirst, launch IPFS daemon:\n\n```\nipfs daemon --enable-pubsub-experiment\n```\nAfter config and log files are setted, you can run the service: (in another terminal)\n\n```\npoetry run sensors_connectivity \"path/to/your/config/file\"  \n```\n\nIf your log file is setted with `console` handler, you will be able to see logs in your console.\n\n## Example of logs:\n\n```\n2022-02-17 19:30:51,248 - INFO - Getting data from the stations...\n2022-02-17 19:30:51,443 - INFO - airalab-http-v0.8.0: [[], [{MAC: c8e2650f254e, Uptime: 0:00:14.010502, M: {Public: 0be87b58e87599a85dc79bf14731cc9ad547411e9b10c883e29f78fc2c67206a, geo: (53.518475,49.397178000000004), measurements: {'airtemp': -8.0, 'windang': 45.0, 'windspeed': 0.13, 'windspeedmax': 0.13, 'pm10': '', 'pm25': '', 'timestamp': 1645113602.0}}}]]\n2022-02-17 19:30:51,443 - INFO - Sending result to the feeders...\n2022-02-17 19:31:07,517 - INFO - Frontier Datalog: Data sent to Robonomics datalog and included in block 0x04baf3d81c6d31ec6f3ca3e515b9a6920666ee17cbd66f57130eaa000bad2cd4\n2022-02-17 19:31:07,519 - INFO - RobonomicsFeeder: {\"0be87b58e87599a85dc79bf14731cc9ad547411e9b10c883e29f78fc2c67206a\": {\"model\": 2, \"geo\": \"53.518475,49.397178000000004\", \"measurement\": {\"airtemp\": -8.0, \"windang\": 45.0, \"windspeed\": 0.13, \"windspeedmax\": 0.13, \"pm10\": \"\", \"pm25\": \"\", \"timestamp\": 1645113602.0}}}\n2022-02-17 19:31:07,523 - INFO - Checking data base...\n127.0.0.1 - - [17/Feb/2022 19:31:13] \"POST / HTTP/1.1\" 200 -\n2022-02-17 19:31:21,248 - INFO - Getting data from the stations...\n2022-02-17 19:31:21,429 - INFO - airalab-http-v0.8.0: [[{MAC: c8e2650f254e, Uptime: 0:00:43.818101, M: {Public: 133b761496539ab5d1140e94f644e2ef92c7ac32446dc782bfe1a768379a669a, geo: (1,200), measurements: {'pm10': 27.58, 'pm25': 15.02, 'temperature': 22.93, 'pressure': 758.0687068706872, 'humidity': 39.44, 'timestamp': 1645115473}}}], [{MAC: c8e2650f254e, Uptime: 0:00:43.996539, M: {Public: 0be87b58e87599a85dc79bf14731cc9ad547411e9b10c883e29f78fc2c67206a, geo: (53.518475,49.397178000000004), measurements: {'airtemp': -8.0, 'windang': 45.0, 'windspeed': 0.13, 'windspeedmax': 0.13, 'pm10': '', 'pm25': '', 'timestamp': 1645113602.0}}}]]\n2022-02-17 19:31:21,444 - INFO - Sending result to the feeders...\n2022-02-17 19:31:51,249 - INFO - Getting data from the stations...\n```\n\n## Troubleshooting\n\n### Python.h: No such file or directory\n\nIf during running `poetry install` comand you get such error, you need to install the header files and static libraries for python dev. Use your package manager for installation. For example, for `apt` you need to run\n```\nsudo apt install python3-dev\n```\n> Note:\npython3-dev does not cover all versions for python3. The service needs at least python3.8, for that you may need to specify the version `sudo apt install python3.8-dev`.\n\n[Here](https://stackoverflow.com/a/21530768) you can find examples for other package managers.\n\n### Python versions mismatch\n\nIf during running `poetry install` comand you get `SolverProblemError`, which says \"The current project's Python requirement (3.6.9) is not compatible with some of the required packages Python requirement:..\", even though you have older version of python (e.g. python3.8), you may need to specify the python version poetry is using:\n\n```\npoetry env use python3.8\n```\n\n"}},"context":{}}