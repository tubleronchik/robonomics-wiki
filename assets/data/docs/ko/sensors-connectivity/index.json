{"hash":"16b6406ac2a554ee167914ed9d84874f98a2f1ea","data":{"doc":{"id":"3cc1c1ae3ab737a2ffe475426d7dbc87","title":"센서 연결성","contributors":["Vourhey","arinaml"],"translated":true,"headings":[],"subtitles":[{"depth":2,"value":"센서 연결 프로토콜 :: V1","anchor":"#센서-연결-프로토콜--v1"},{"depth":3,"value":"스테이션에 센서","anchor":"#스테이션에-센서"},{"depth":3,"value":"Robonomics 스테이션","anchor":"#robonomics-스테이션"},{"depth":2,"value":"스테이션 및 피더","anchor":"#스테이션-및-피더"},{"depth":3,"value":"스테이션","anchor":"#스테이션"},{"depth":3,"value":"피더","anchor":"#피더"},{"depth":2,"value":"연결 구성","anchor":"#연결-구성"}],"content":"\n이 Aira 패키지를 사용하면 SDS011 센서에서 데이터를 읽고 다른 출력 채널에 게시할 수 있습니다. 즉, Aira는 측정 값이 포함된 JSON 형식 메시지를 형성하고이를 몇 개의 채널에 게시할 수 있습니다. 또한 아직 실험적인 데이터 로그 기능도 포함되어 있습니다. Robonomics의 Substrate 기반 블록체인에 데이터를 게시하는 데 사용할 수 있습니다.\n\n마지막 릴리스는 [Sensors Connectivity v0.2](https://github.com/airalab/sensors-connectivity/releases/tag/v0.2) 입니다.\n\n## 센서 연결 프로토콜 :: V1\n\n### 스테이션에 센서\n\n**TCP 세션 다이어그램**\n\n| HEADER | DATA1 | DATA2 | DATA3 | ... | DATAN |\n|--------|-------|-------|-------|-----|-------|\n\n여기서 `HEADER` 는 34 바이트입니다.\n\n|      | Name      |\n|------|-----------|\n| 0x00 | public_id |\n| 0x20 | codec_id  |\n\n* `public_id` - 센서 설정시 생성되는 공용 식별자입니다.\n* `codec_id` - 사용 된 데이터 코덱의 유형입니다.\n\n**데이터 프레임**\n\n|      | Name      |\n|------|-----------|\n| 0x22 | payload   |\n| 0xNN | signature |\n\n\n* `페이로드`-센서 측정.\n* `서명`-측정 Ed25519 서명, 64 바이트 길. ([pynacl](https://github.com/pyca/pynacl))\n\nSDS011의 경우 센서 페이로드는 PM2.5, PM10, GEO_LAT, GEO_LON의 4 가지 부동 숫자로 구성됩니다\n\n### Robonomics 스테이션\n\n기본 출력 채널은 IPFS pubsub를 통한 Robonomics 프로토콜입니다. 모든 측정 연결에 대해 다음과 같은 json 형식의 문자열이 생성됩니다:\n\n```\n{public_id: {\"model\": codec_id,\"timestamp\": unix_timestamp, \"measurement\": {\"pm25\": PM2.5, \"pm10\": PM10, \"geo\": \"GEO_LAT,GEO_LON\"}}}\n```\n\n## 스테이션 및 피더\n\n센서 연결에는 스테이션과 피더의 두 가지 엔티티가 있습니다.\n\n### 스테이션\n\n스테이션은 데이터 소스를 나타냅니다. 패키지는 여러 입력을 동시에 처리 할 수 있습니다:\n\n```\nstation1 \\                        / output1\nstation2 -  sensors-connectivity  - output2\nstation3 /                        \\ output3\n```\n\nCOM 스테이션 과 TCP 스테이션이 구현되어 있습니다. 첫 번째는 직렬 포트에 연결된 센서에서 데이터를 읽습니다. TCP Station은 TCP 서버를 시작하고 들어오는 연결을 수신합니다.\n\nTCP 스테이션은 모든 센서의 데이터를 수락하거나 알려진 센서에 대해서만 액세스 제어 목록 (ACL)을 지정할 수 있습니다.\n\n### 피더\n\n피더는 센서 연결 측면에서 출력입니다:\n\n```\ninput1 \\                        / feeder1\ninput2 -  sensors-connectivity  - feeder2\ninput3 /                        \\ feeder3\n```\n\n현재 구현에서 패키지는 [Luftdaten](https://meine.luftdaten.info/), Robonomics 또는 Robonomics on Substrate에 데이터를 게시 할 수 있습니다 (데이터 로그 기능 사용).\n\n## 연결 구성\n\n패키지는 고도로 구성 가능합니다. 기본 구성 파일은 다음과 같습니다:\n\n```yaml\n# Please DO NOT edit this file\n# Make a copy instead, make changes and pass the absolute path to the copy in arguments\ngeneral:\n  publish_interval: 300 # time between two published messages\ncomstation:\n  port: \"/dev/ttyUSB0\"  # COM port of the device\n  work_period: 300      # time between two measurements in seconds\n  geo: \"\"               # Geo coordinates as latitude,longitude\n  public_key: \"\"        # If not provided, COMStation creates itself\ntcpstation:\n  address: \"\"           # IP and PORT to listen to, for example 0.0.0.0:31313\n  acl:                  # list of known addresses. If not specified accepts from everyone\n  # -\n  # -\nluftdaten:\n  enable: true          # whether or not publish to https://luftdaten.info/\nrobonomics:\n  enable: true          # enable use of Robonomics Network\n  ipfs_provider: \"\"     # ipfs endpoint\n  ipfs_topic: \"airalab.lighthouse.5.robonomics.eth\"\ndatalog:\n  enable: false         # enable use of Datalog Robonomics subcommand\n  path: \"\"              # path to Robonomics execution file\n  suri: \"\"              # private key of publisher account\n  remote: \"wss://substrate.ipci.io\"\n  dump_interval: 3600   # time between two transactions in seconds\n  temporal_username:    # set to pin files in Temporal.Cloud\n  temporal_password:\ndev:\n  sentry: \"\"\n```\n\n모든 옵션과 시작 시나리오에 익숙해 지려면 [README.md](https://github.com/airalab/sensors-connectivity/tree/v0.2)를 확인하시기 바랍니다."}},"context":{}}