(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"1B6V":function(e,t){e.exports={type:"image",mimeType:"image/jpeg",src:"/assets/static/flying_picturing.c92f61a.951461b5735c17e73693820954e244da.jpg",size:{width:1872,height:895},sizes:"(max-width: 1872px) 100vw, 1872px",srcset:["/assets/static/flying_picturing.82a2fbd.951461b5735c17e73693820954e244da.jpg 480w","/assets/static/flying_picturing.cbab2cf.951461b5735c17e73693820954e244da.jpg 1024w","/assets/static/flying_picturing.c92f61a.951461b5735c17e73693820954e244da.jpg 1872w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1872 895' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-e20660247f8fa8448ed094b850ad3276'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-e20660247f8fa8448ed094b850ad3276)' width='1872' height='895' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAfAEADASIAAhEBAxEB/8QAGwAAAgIDAQAAAAAAAAAAAAAABQcABgECBAP/xAAxEAABAwMCAwUHBQEAAAAAAAABAgMEAAURBhIhMUETFCJhgRVCUVJxkbEHIzJDkuH/xAAYAQADAQEAAAAAAAAAAAAAAAABAwQAAv/EACERAQADAAAFBQAAAAAAAAAAAAEAAhEDITFRcQQSIpHw/9oADAMBAAIRAxEAPwBYOXu8Bkq9rz8jd/b8PSpIvt3aWom8TwlIBz2o%2bH0qrd/nlspLXAg5/bPWtXpM55tSXGCUqGM9kfhim4S/CGJet9TmKuIdRTnY60FtTW7wlB4YPpTN0qSnTsDaSNzQJweZpG93e6Muf4NOOFcW7TouJLdGShkBCD7yzyH3rmx2ieOHLJZESHEgttvKAP8AJKV/kVntl4A7RWBy8VL3SF7LGqkxxGm3J950LKIjfaOOKKcrCU5yeWfoKYED9QNMd5f77KlssoUUqbkW0gtHJ4KIKh0I6daV8hSxmRFgAauyelbJWpIISogHmAedFnNUaDuEZYj3O3IdWRtKgplQ9SBQSBqjS0y9ItMdiY68p8tCSl1JbUPmB3DCfM9KMESS77lHgaWFY4Er5Vz%2b13eOQo5OeKv%2bUMHIVKeVCX%2bw7Qiq7yAct7Rw94ZohqC9OSosGI2cNQ2wgD5nTzPoDiq9TYhaaj3Cww3BCYLzrAUl/YNyVefEZB%2b9DSruSf1AASgaYf7nf4L/ALUdtO1RUZraVKLfA9E8Tnl615NTVKL0FVykRrdMdDkkDcpK9pO1akZyogk/emOjQtskDa829EeA8Zbd3JGOoz%2bKy/pRA029aoM5kxFyBIU67DBdCgMAb852%2bQFTXLPPrvj78xGkWrUmUqELaqW6LSmQH1AI3JQo%2bHtMYznb0zXREauN3ej2G1IE8IdcVGS2ylDjmRk8Tg4wM7SeHSrAdE3uPEeRDltGPJAStAWUhzByAoeRrnToy5Ro0lx5C2ZaSksFp1ODnnk5BH1FBr1z895p/9k=' /%3e%3c/svg%3e"}},FLqX:function(e,t,o){"use strict";o.r(t);var a=o("KHd+"),A=o("UQSp"),n=o("Kw5r");function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.a.config.optionMergeStrategies;var r={VueRemarkRoot:A.a},s=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(r).forEach((function(e){"object"===i(r[e])&&"function"==typeof r[e].render||"function"==typeof r[e]&&"function"==typeof r[e].options.render?t[e]=r[e]:o[e]=function(){return r[e]}}))},c=n.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",d={excerpt:null,title:"Connect any ROS-compatitable robot under Robonomics parachain control. Part 2: IPFS"};var g=function(e){e.options[l]&&(e.options[l]=d),n.a.util.defineReactive(e.options,l,d),e.options.computed=c.computed({$frontmatter:function(){return e.options[l]}},e.options.computed)},p=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("VueRemarkRoot",[a("h1",{attrs:{id:"connect-any-ros-compatitable-robot-under-robonomics-parachain-control-part-2-ipfs"}},[a("a",{attrs:{href:"#connect-any-ros-compatitable-robot-under-robonomics-parachain-control-part-2-ipfs","aria-hidden":"true"}},[e._v("#")]),e._v("Connect any ROS-compatitable robot under Robonomics parachain control. Part 2: IPFS")]),a("p",[a("strong",[e._v("In this article we will continue using Robonomics tools to make a drone be controlled by a parachain. This time we will add sending data to IPFS and hash storing in chain options. Below is the instruction and code snippets. Requirements:")])]),a("ul",[a("li",[a("a",{attrs:{href:"/docs/connect-any-ros-compatitable-robot-under-robonomics-parachain-control-1"}},[a("strong",[e._v("Part 1 of this tutorial")])])]),a("li",[e._v("Ubuntu 18.04 LTS")]),a("li",[e._v("ROS Melodic + Gazebo + RViz (installation manual "),a("a",{attrs:{href:"http://wiki.ros.org/melodic/Installation",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(")")]),a("li",[e._v("IPFS 0.4.22 (download from "),a("a",{attrs:{href:"https://dist.ipfs.io/go-ipfs/v0.4.22/go-ipfs_v0.4.22_linux-386.tar.gz",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(" and install)")]),a("li",[e._v("Robonomics node (binary file) (download latest release "),a("a",{attrs:{href:"https://github.com/airalab/robonomics/releases",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(")")]),a("li",[e._v("Python dependencies:")])]),a("pre",[a("code",{pre:!0},[e._v("pip install cv_bridge ipfshttpclient\n")])]),a("p",[e._v("The entire process of coding this part of demo is presented in a video below.")]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/dliLb6GHgpo",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("h2",{attrs:{id:"1-add-dependencies"}},[a("a",{attrs:{href:"#1-add-dependencies","aria-hidden":"true"}},[e._v("#")]),e._v("1. Add dependencies")]),a("p",[e._v("If we launch a simulation and look at the topic list (see previous tutorial), we will see, that there is one topic containing front camera data and using "),a("code",{pre:!0},[e._v("sensor_msgs/Image")]),e._v(" message type:")]),a("p",[a("g-image",{attrs:{src:o("Mbo3"),alt:"front_camera",title:"front_camera"}})],1),a("p",[e._v("Let's try to take a picture every 1 second and after the flight publish these photos to IPFS. If you have completed the first tutorial, you don't need to download anything else. It's the "),a("code",{pre:!0},[e._v("drone_sample_controller_pictures.py")]),e._v(" script.")]),a("h2",{attrs:{id:"2-manage-accounts-in-dapp"}},[a("a",{attrs:{href:"#2-manage-accounts-in-dapp","aria-hidden":"true"}},[e._v("#")]),e._v("2. Manage accounts in DAPP")]),a("p",[e._v("As done in a previous tutorial, create a local robonomics network node with robonomics binary file:")]),a("pre",[a("code",{pre:!0},[e._v("./robonomics --dev\n")])]),a("p",[a("strong",[e._v("Important!")]),e._v(" Before next launches it is necessary to remove a directory "),a("code",{pre:!0},[e._v("db")]),e._v(" with")]),a("pre",[a("code",{pre:!0},[e._v("rm -rf /home/$USER/.local/share/robonomics/chains/dev/db\n")])]),a("p",[e._v("After a successful launch create accounts following "),a("a",{attrs:{href:"/docs/create-account-in-dapp"}},[e._v("this")]),e._v(" manual. "),a("strong",[e._v("Do not forget to save each account's seed and address! You will need them for transactions")]),e._v(". Add these addresses, seeds and path to robonomics binary file to file "),a("code",{pre:!0},[e._v("config.config")]),e._v(" in "),a("code",{pre:!0},[e._v("robonomics_ws/src/robonomics_sample_controller/src")]),e._v(". Transfer some money (units) to these accounts:")]),a("p",[a("g-image",{attrs:{src:o("rh+M"),alt:"balances",title:"balances"}})],1),a("h2",{attrs:{id:"3-launch"}},[a("a",{attrs:{href:"#3-launch","aria-hidden":"true"}},[e._v("#")]),e._v("3. Launch")]),a("p",[e._v("Up to now the "),a("strong",[e._v("only thing running")]),e._v(" should be the robonomics local node. In a separate terminal launch drone simulation:")]),a("pre",[a("code",{pre:!0},[e._v("roslaunch sjtu_drone simple.launch\n")])]),a("p",[e._v("In another one launch ipfs daemon:")]),a("pre",[a("code",{pre:!0},[e._v("ifps init # you only need to do this once\nipfs daemon\n")])]),a("p",[e._v("Run the script:")]),a("pre",[a("code",{pre:!0},[e._v("rosrun drone_simulator_controller drone_sample_controller_pictures.py\n")])]),a("p",[e._v("Now you can send a transaction triggering the drone to start flying and taking pictures. To do so, you should use the Robonomics IO "),a("code",{pre:!0},[e._v("write")]),e._v(" subcommand of robonomics binary file:")]),a("pre",[a("code",{pre:!0},[e._v('echo "ON" | ./robonomics io write launch -r <DRONE_ADDRESS> -s <EMPLOYER’S_KEY>\n')])]),a("p",[e._v("Where "),a("code",{pre:!0},[e._v("<DRONE_ADDRESS>")]),e._v("  and "),a("code",{pre:!0},[e._v("<EMPLOYER’S_KEY>")]),e._v(" are replaced with  previously saved strings accordingly.\nYou should see the log "),a("code",{pre:!0},[e._v('"Taking Off"')]),e._v(" and the drone should start flying and taking pictures:")]),a("p",[a("g-image",{attrs:{src:o("1B6V"),alt:"flying_picturing",title:"flying_picturing"}})],1),a("p",[e._v("Later, when the job is done, on the Robonomics portal go to "),a("code",{pre:!0},[e._v("Developer")]),e._v(" -> "),a("code",{pre:!0},[e._v("Chain state")]),e._v(" and add a "),a("code",{pre:!0},[e._v("DRONE")]),e._v(" datalog using "),a("code",{pre:!0},[e._v("“+”")]),e._v(" button with selected "),a("code",{pre:!0},[e._v("datalog")]),e._v(" as state query. The IPFS hash of the telemetry has been saved in the blockchain. To see the data simply copy the hash and add it to the local "),a("a",{attrs:{href:"https://gateway.ipfs.io/ipfs/QmeYYwD4y4DgVVdAzhT7wW5vrvmbKPQj8wcV2pAzjbj886/docs/getting-started/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("gateway")]),e._v(" address "),a("code",{pre:!0},[e._v("localhost:8080/ipfs/")]),e._v(":")]),a("p",[a("g-image",{attrs:{src:o("i9Wm"),alt:"Voila",title:"Voila"}})],1)])}),[],!1,null,null,null);"function"==typeof s&&s(p),"function"==typeof g&&g(p);t.default=p.exports},Mbo3:function(e,t){e.exports={type:"image",mimeType:"image/jpeg",src:"/assets/static/front_camera.41d2f2b.6b11fa69cb40b0d62f376386901a8ed4.jpg",size:{width:714,height:195},sizes:"(max-width: 714px) 100vw, 714px",srcset:["/assets/static/front_camera.41d2f2b.6b11fa69cb40b0d62f376386901a8ed4.jpg 714w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 714 195' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-80e99f4e4a6c7614884b163c90768ca6'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-80e99f4e4a6c7614884b163c90768ca6)' width='714' height='195' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAARAEADASIAAhEBAxEB/8QAGQABAQEBAQEAAAAAAAAAAAAAAAMCBAEH/8QAJRAAAQQBAwQCAwAAAAAAAAAAAQACAxEEEiExEzJBYRQzUsHS/8QAGAEBAQEBAQAAAAAAAAAAAAAAAAIBAwT/xAAYEQEBAQEBAAAAAAAAAAAAAAAAARIRQf/aAAwDAQACEQMRAD8A%2bStOVI50sc2M9hFcP0mtyeeVyCbO0fRE4ON2XX7/ACUnQz6nE4GJsKIof0oyQTGItOLA2j3trVzxdq5jzj3zK05z5A8BvTiI3jY8BtD0SVOY58I1ySSNFVfUB/a58zFkw8l8GQ1glZVhrg4bgEbjbghRr0ui1/mZN315Lu%2b7ytNz8tri5uTKHHzqXMiDckskunqPc7TsL8LCIgh4C0OQiKq1RvavURSwREQEREH/2Q==' /%3e%3c/svg%3e"}},UQSp:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},i9Wm:function(e,t){e.exports={type:"image",mimeType:"image/jpeg",src:"/assets/static/datalog.2655f1b.fc7f071f95c22d9b16b98b89f250c080.jpg",size:{width:1728,height:622},sizes:"(max-width: 1728px) 100vw, 1728px",srcset:["/assets/static/datalog.82a2fbd.fc7f071f95c22d9b16b98b89f250c080.jpg 480w","/assets/static/datalog.cbab2cf.fc7f071f95c22d9b16b98b89f250c080.jpg 1024w","/assets/static/datalog.2655f1b.fc7f071f95c22d9b16b98b89f250c080.jpg 1728w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1728 622' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-f46913853e6a1b09253922897a066960'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-f46913853e6a1b09253922897a066960)' width='1728' height='622' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAXAEADASIAAhEBAxEB/8QAGgABAAIDAQAAAAAAAAAAAAAAAAMHAQIGBP/EADEQAAECAQkGBAcAAAAAAAAAAAEAAhEDBQYHIUFRYdIEF1aRkqESEyJCFiQxMlJxwv/EABYBAQEBAAAAAAAAAAAAAAAAAAABAv/EABcRAQEBAQAAAAAAAAAAAAAAAAABESH/2gAMAwEAAhEDEQA/ALcl6pKBy0o6UfRubSSb5JxNln5LElU5QKUBhRua7MZF2pdyT6Tbeb8yvRsZ9LrcPctWcZlcIypqgAHrovNTjj4HD%2bltubq%2b4VmvpdqVgxz7pHPustK%2b3N1fcKzX0u1Jubq%2b4VmvpdqVgxz7pHPugr7c3V9wrNfS7UtTU7V6HhvwrNcSI/a7UrDjn3Ubj8wy32m/9IITs8rAjw3m8YqbZ5N7A4OBtzCIrqSYlg7A80g7A80RRSDsDzSDsDzRECDsDzWpY/zWugYAEfVEQf/Z' /%3e%3c/svg%3e"}},"rh+M":function(e,t){e.exports={type:"image",mimeType:"image/jpeg",src:"/assets/static/balances.979351d.a8c7966b22767f0ef371982bb9ca7f4c.jpg",size:{width:1800,height:542},sizes:"(max-width: 1800px) 100vw, 1800px",srcset:["/assets/static/balances.82a2fbd.a8c7966b22767f0ef371982bb9ca7f4c.jpg 480w","/assets/static/balances.cbab2cf.a8c7966b22767f0ef371982bb9ca7f4c.jpg 1024w","/assets/static/balances.979351d.a8c7966b22767f0ef371982bb9ca7f4c.jpg 1800w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1800 542' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-309c514879d58a173a62f00e8c0b8c75'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-309c514879d58a173a62f00e8c0b8c75)' width='1800' height='542' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAATAEADASIAAhEBAxEB/8QAGQAAAwEBAQAAAAAAAAAAAAAAAAIDAQQI/8QAKhAAAQMCAwcEAwAAAAAAAAAAAQACEQMSITFRBDJBYWKRkhMiUnFCcvD/xAAVAQEBAAAAAAAAAAAAAAAAAAAAAf/EABURAQEAAAAAAAAAAAAAAAAAAAAB/9oADAMBAAIRAxEAPwD04GWVIbe6RiHVCVSqy1jiLp/dTIYdobPp5Dh9qlePSdudlBrGYGQ7P5JrBofNZTjHcz0TSOjsgywaHzWGmCMneaaR0dkSOjsikLAAMHfd0qbAYG8ZPyVXwR%2bHHhyUacQzcz05IJ1arxXpQc4GSttNRwouxQhINp1He7HinvdqhCAvdqi92qEIFe92GP8AQuelUfDMeOnJCFKP/9k=' /%3e%3c/svg%3e"}}}]);